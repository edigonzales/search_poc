buildscript {
    repositories {
        maven { url "http://jars.interlis.ch" }
        maven { url "http://download.osgeo.org/webdav/geotools/" }
        jcenter()
        mavenCentral()
    }
}

plugins {
  id "ch.so.agi.gretl" version "1.0.59"
}

import ch.so.agi.gretl.tasks.*
import ch.so.agi.gretl.api.TransferSet

import java.nio.file.Files
import java.nio.file.Paths
import java.io.File

//defaultTasks 'setupSearchFunc'
def dbUriPub = 'jdbc:postgresql://192.168.50.8:5432/pub'
def dbUserPub = 'ddluser'
def dbPwdPub = 'ddluser'
 
def dbUriDocker = 'jdbc:postgresql://192.168.50.8:5432/pub';  
def dbUserDocker = 'ddluser';
def dbPwdDocker = 'ddluser'; 

task createTable(type: SqlExecutor){
	database = [dbUriDocker, dbUserDocker, dbPwdDocker]
    sqlFiles = ['sql_ddl/drop_table.sql', 'sql_ddl/create_table.sql']
}

task loadData(type: Db2Db, dependsOn: createTable){
    sourceDb = [dbUriPub, dbUserPub, dbPwdPub]
    targetDb = [dbUriDocker, dbUserDocker, dbPwdDocker]
    transferSets = [
		new TransferSet('sql_dml/fill_objects.sql', 'public.searchobjects', false),
		new TransferSet('sql_dml/grundstuecke.sql', 'public.searchobjects', false),
		new TransferSet('sql_dml/adressen.sql', 'public.searchobjects', false),
	];        
}

/*
task loadMeta(type: Db2Db, dependsOn: loadData){
    sourceDb = [dbUriSogis, dbUserSogis, dbPwdSogis]
    targetDb = [dbUriDocker, dbUserDocker, dbPwdDocker]
    transferSets = [
		new TransferSet('sql_dml/datasets.sql', 'public.searchobjects', false),
	];        
}
*/

task setupSearchFunc(type: SqlExecutor, dependsOn: loadData) {
//task setupSearchFunc(type: SqlExecutor) {
	database = [dbUriDocker, dbUserDocker, dbPwdDocker]
    sqlFiles = ['sql_ddl/create_pg_trgm.sql', 'sql_ddl/create_func_tok3.sql']   //, 'sql_ddl/create_func_tok3.sql'] - SqlExecutor returns error --> exec manual 
}


